{
    "main":{
        "prefix": "include",
        "body": [
            "#include <bits/stdc++.h>",
            "#include <vector>",
            "#include <numeric>",
            "#define PI 3.14159265358979323846",
            "#define MAXINF 1e18L",
            "#define INF 1e9L",
            "#define EPS 1e-9",
            "#define REP(i, n) for(int i=0;i<int(n);++i)",
            "#define Rep(i,sta,n) for(int i=sta;i<n;i++)",
            "#define RREP(i, n) for(int i=int(n)-1;i>=0;--i)",
            "#define ALL(v) v.begin(),v.end()",
            "#define FIND(v,x) (binary_search(ALL(v),(x)))",
            "#define SORT(v) sort(ALL(v))",
            "#define RSORT(v) sort(ALL(v));reverse(ALL(v))",
            "#define DEBUG(x) cerr<<#x<<\": \"<<x<<endl;",
            "#define DEBUG_VEC(v) cerr<<#v<<\":\";for(int i=0;i<v.size();i++) cerr<<\" \"<<v[i]; cerr<<endl",
            "#define Yes(n) cout<<((n)?\"Yes\":\"No\")<<endl",
            "#define YES(n) cout<<((n)?\"YES\":\"NO\")<<endl",
            "#define pb push_back",
            "using namespace std;",
            "template<class A>void pr(A a){cout << (a) << endl;}",
            "template<class A,class B>void pr(A a,B b){cout << a << \" \"  ;pr(b);}",
            "template<class A,class B,class C>void pr(A a,B b,C c){cout << a << \" \" ;pr(b,c);}",
            "template<class A,class B,class C,class D>void pr(A a,B b,C c,D d){cout << a << \" \" ;pr(b,c,d);}",
            "typedef long long ll;",
            "typedef pair<int, int> pii;",
            "",
            "int main(void)",
            "{",
            "\t$0",
            "}"
            ]
    },
    "main2":{
        "prefix": "include2",
        "body": [
            "#include <bits/stdc++.h>",
            "#define REP(i, n) for(int i=0;i<int(n);++i)",
            "#define Yes(n) cout<<((n)?\"Yes\":\"No\")<<endl",
            "using namespace std;",
            "template<class A>void pr(A a){cout << (a) << endl;}",
            "int main(void)",
            "{",
            "\t$0",
            "}"
            ]
    },
    "class": {
        "prefix": "class",
        "body": [
            "class ${1:name} {",
            "\tpublic:",
            "\t\t${1:name}() {",
            "\t\t}",
            "",
            "\tprivate:",
            "\t\t${0:}",
            "};"
            ],
        "description": "インライン コンストラクター/デストラクターを含むクラスに対するコード スニペット"
    },
    "do": {
        "prefix": "do",
        "body": [
            "do {",
            "\t${0:}",
            "} while(${1:expression});"
            ],
        "description": "do...while ループに対するコード スニペット"
    },
    "else": {
        "prefix": "else",
        "body": [
            "else {",
            "\t${0:}",
            "}",
            ],
        "description": "else ステートメントに対するコード スニペット"
    },
    "for": {
        "prefix": "for",
        "body": [
            "for (${1:type} ${2:i} = 0; ${2:i} < ${3:length}; ${2:i}++) {",
            "\t${0:}",
            "}"
            ],
        "description": "for ループに対するコード スニペット"
    },
    "foreach": {
        "prefix": "foreach",
        "body": [
            "for  each (${1:type} ${2:indentifier} in ${3:collection}) {",
            "\t${0:}",
            "}"
            ],
        "description": "foreach ステートメントに対するコード スニペット"
    },
    "vecfor": {
        "prefix": "vecfor",
        "body": [
            "for (${1:auto&} ${2:variable} : ${3:range}) {",
            "\t${0:}",
            "}"
            ],
        "description": "'コンテナ型の for' ループに対するコード スニペット"
    },
    "switch": {
        "prefix": "switch",
        "body": [
            "switch (${1:expression}) {",
            "\tdefault:",
            "\tbreak;${0:}",
            "}"
            ],
        "description": "switch ステートメントに対するコード スニペット"
    },
    "while": {
        "prefix": "while",
        "body": [
            "while (${1:expression}) {",
            "\t${0:}",
            "}"
            ],
        "description": "while ループに対するコード スニペット"
    },
    "cinvector": {
        "prefix": "cinvector",
        "body": [
            "vector<${1:int}> ${2:a}(${3:n});",
            "for (int ${4:i} = 0; ${4:i} < ${3:n}; ${4:i}++) {",
            "\tcin >> ${2:a}[${4:index}];",
            "}"
            ],
        "description": "vector と for ループに対するコード スニペット"
    },
    "vector": {
        "prefix": "vector",
        "body": ["vector<${1:int}> ${2:v};"],
        "description": "コンテナの宣言" 
    },
    "cin1": {
        "prefix": "cin1",
        "body": ["${1:int} ${2:a};","cin >> ${2:a};","${0:}"]
    },
    "cin2": {
        "prefix": "cin2",
        "body": ["${1:int} ${2:a},${3:b};","cin >> ${2:a} >> ${3:b};","${0:}"]
    },
    "cin3": {
        "prefix": "cin3",
        "body": ["${1:int} ${2:a},${3:b},${4:c};","cin >> ${2:a} >> ${3:b} >> ${4:c};","${0:}"]
    },
    "rep": {
        "prefix": "rep",
        "body": ["REP(${1:i}, ${2:n}){", "\t${0:}", "}"]
    },
    "rrep": {
        "prefix": "rrep",
        "body": ["RREP(${1:i}, ${2:n}){", "\t${0:}", "}"]
    },    
    "gcd": {
        "prefix": "gcd",
        "body": [
            "ll gcd(ll a, ll b) {", 
            "\tif (b == 0) return a;",
            "\treturn gcd(b, a % b);",
            "}"
            ]
    },
    "lcm": {
        "prefix": "lcm",
        "body": [
            "ll lcm(ll a, ll b) {", 
            "\treturn a * b / gcd(a, b);",
            "}"
            ]
    },
    "matrix": {
        "prefix": "matrix",
        "body": ["${1:v}[${2:x}][${3:y}]${0:}"]
    },
    "vec2": {
        "prefix": "vec2",
        "body": [
            "class Vec2{",
            "public:",
            "\tint x;int y;",
            "\tVec2(int x=0, int y=0) : x(x), y(y){};",
            "\tVec2 operator+(Vec2 v){",
            "\t\treturn Vec2(x+v.x, y+v.y);",
            "\t}",
            "\tVec2 operator-(Vec2 v){",
            "\t\treturn Vec2(x-v.x, y-v.y);",
            "\t}",
            "};"
            ]
    },
    "diff4": {
        "prefix": "diff4",
        "body": ["int dx[4]={-1,1,0,0}, dy[4]={0,0,-1,1};"]
    },
    "diff4_vec2": {
        "prefix": "diff4_vec2",
        "body": ["Vec2 diff[4] = {Vec2(-1,0),Vec2(1,0),Vec2(0,-1),Vec2(0,1)};"]
    },
}